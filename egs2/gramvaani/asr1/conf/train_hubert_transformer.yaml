# network architecture

frontend: s3prl
frontend_conf:
    frontend_conf:
        upstream: hubert_large_ll60k  # Note: If the upstream is changed, please change the input_size in the preencoder.
    download_dir: ./hub
    # multilayer_feature: True

preencoder: linear
preencoder_conf:
    input_size: 1024  # Note: If the upstream is changed, please change this value accordingly.
    output_size: 512

# encoder related
encoder: conformer
encoder_conf:
    output_size: 512
    attention_heads: 8
    linear_units: 2048
    num_blocks: 1
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0.1
    input_layer: conv2d
    normalize_before: true
    macaron_style: true
    pos_enc_layer_type: "rel_pos"
    selfattention_layer_type: "rel_selfattn"
    activation_type: "swish"
    use_cnn_module:  true
    cnn_module_kernel: 31
    use_flash_attn: false # if setting true then use fp16 and bf16 with amp=true and monitor gradient

decoder: transformer
decoder_conf:
    attention_heads: 8
    linear_units: 2048
    num_blocks: 4
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    self_attention_dropout_rate: 0.1
    src_attention_dropout_rate: 0.1
    use_flash_attn: false

# hybrid CTC/attention
model_conf:
    ctc_weight: 0.0
    lsm_weight: 0.1
    length_normalized_loss: false
    extract_feats_in_collect_stats: false

# minibatch related
batch_type: folded
batch_size: 1

# optimization related
optim: adam
grad_clip: 5
optim_conf:
    lr: 0.0002
scheduler: warmuplr     # pytorch v1.1.0+ required
scheduler_conf:
    warmup_steps: 25000
max_epoch: 50

freeze_param: [
"frontend.upstream"
]

# others:
best_model_criterion:
-  - valid
   - acc
   - max
keep_nbest_models: 1

specaug: specaug
specaug_conf:
    apply_time_warp: true
    time_warp_window: 5
    time_warp_mode: bicubic
    apply_freq_mask: true
    freq_mask_width_range:
    - 0
    - 30
    num_freq_mask: 2
    apply_time_mask: true
    time_mask_width_range:
    - 0
    - 40
    num_time_mask: 2

init: xavier_uniform
